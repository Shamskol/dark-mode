{"version":3,"sources":["components/Chart.jsx","components/Charts.jsx","components/Navbar.jsx","index.js"],"names":["Chart","sparklineData","formattedData","map","price","idx","timeToSubtract","value","date","moment","subtract","format","length","filter","data","width","height","type","dataKey","stroke","strokeDasharray","interval","Charts","coinData","className","coin","key","name","symbol","src","image","alt","sparkline_in_7d","Navbar","useState","darkMode","setDarkMode","onClick","e","preventDefault","rootElement","document","getElementById","ReactDOM","render","setCoinData","useEffect","axios","get","then","res","catch","err","console","log"],"mappings":"uPAuCeA,MA5BD,EAAGC,oBACf,MAAMC,EAAgBD,EACnBE,IAAI,CAACC,EAAOC,KACX,GAAIA,EAAM,IAAM,EAAG,CACjB,MAAMC,EAAiB,IAAMD,EAI7B,MAAO,CAAEE,MAAOH,EAAOI,KAHVC,MACVC,SAASJ,EAAgB,SACzBK,OAAO,cAEL,GAAIN,IAAQJ,EAAcW,OAAS,EAAG,CAE3C,MAAO,CAAEL,MAAOH,EAAOI,KADVC,MAASE,OAAO,cAG/B,OAAO,OAERE,OAAOC,GAAQA,GAElB,OACE,kBAAC,IAAD,CAAWC,MAAO,KAAMC,OAAQ,IAAKF,KAAMZ,GACzC,kBAAC,IAAD,CAAMe,KAAK,WAAWC,QAAQ,QAAQC,OAAO,YAC7C,kBAAC,IAAD,CAAeA,OAAO,OAAOC,gBAAgB,QAC7C,kBAAC,IAAD,CAAOF,QAAQ,OAAOG,SAAU,IAChC,kBAAC,IAAD,MACA,kBAAC,IAAD,QCfSC,MAhBA,EAAGC,cAEd,yBAAKC,UAAU,UACZD,EAASpB,IAAIsB,GACZ,yBAAKD,UAAU,mBAAmBE,IAAKD,EAAKE,MAC1C,wBAAIH,UAAU,eAAeC,EAAKE,MAClC,wBAAIH,UAAU,gBAAgBC,EAAKG,QACnC,yBAAKJ,UAAU,cACb,yBAAKK,IAAKJ,EAAKK,MAAOd,OAAO,KAAKe,IAAKN,EAAKE,QAE9C,kBAAC,EAAD,CAAO1B,cAAewB,EAAKO,gBAAgB5B,WCQtC6B,MAnBA,KAAO,MAAD,EACaC,oBAAS,GADtB,mBACZC,EADY,KACFC,EADE,KAMnB,OACE,yBAAKZ,UAAU,UACb,8CACA,yBAAKA,UAAU,qBACb,yBACEa,QATWC,IACjBA,EAAEC,iBACFH,GAAaD,IAQPX,UAAWW,EAAW,iBAAmB,c,OCLnD,MAmBMK,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBApBJ,KAAO,MAAD,EACgBV,mBAAS,IADzB,mBACTX,EADS,KACCsB,EADD,KAWhB,OARAC,oBAAU,KACRC,IACGC,IACC,0HAEDC,KAAKC,GAAOL,EAAYK,EAAIpC,OAC5BqC,MAAMC,GAAOC,QAAQC,IAAIF,KAC3B,IAED,yBAAK5B,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQD,SAAUA,MAMR,MAASiB,K","file":"static/js/main.2aa7a263.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip\r\n} from \"recharts\";\r\n\r\nconst Chart = ({ sparklineData }) => {\r\n  const formattedData = sparklineData\r\n    .map((price, idx) => {\r\n      if (idx % 6 === 0) {\r\n        const timeToSubtract = 168 - idx;\r\n        const date = moment()\r\n          .subtract(timeToSubtract, \"hours\")\r\n          .format(\"ddd h:mma\");\r\n        return { value: price, date };\r\n      } else if (idx === sparklineData.length - 1) {\r\n        const date = moment().format(\"ddd h:mma\");\r\n        return { value: price, date };\r\n      }\r\n      return null;\r\n    })\r\n    .filter(data => data);\r\n\r\n  return (\r\n    <LineChart width={1100} height={300} data={formattedData}>\r\n      <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n      <XAxis dataKey=\"date\" interval={3} />\r\n      <YAxis />\r\n      <Tooltip />\r\n    </LineChart>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"./Chart\";\r\n\r\nconst Charts = ({ coinData }) => {\r\n  return (\r\n    <div className=\"charts\">\r\n      {coinData.map(coin => (\r\n        <div className=\"chart__container\" key={coin.name}>\r\n          <h2 className=\"coin__title\">{coin.name}</h2>\r\n          <h4 className=\"coin__symbol\">{coin.symbol}</h4>\r\n          <div className=\"coin__logo\">\r\n            <img src={coin.image} height=\"40\" alt={coin.name} />\r\n          </div>\r\n          <Chart sparklineData={coin.sparkline_in_7d.price} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Charts;\r\n","import React, { useState } from 'react';\r\n\r\nconst Navbar = () => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const toggleMode = e => {\r\n    e.preventDefault();\r\n    setDarkMode(!darkMode);\r\n  };\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h1>Crypto Tracker</h1>\r\n      <div className=\"dark-mode__toggle\">\r\n        <div\r\n          onClick={toggleMode}\r\n          className={darkMode ? 'toggle toggled' : 'toggle'}\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport Charts from \"./components/Charts\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst App = () => {\r\n  const [coinData, setCoinData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=true\"\r\n      )\r\n      .then(res => setCoinData(res.data))\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Charts coinData={coinData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}